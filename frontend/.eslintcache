[{"C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\index.js":"1","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\App\\App.js":"2","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\Catalog\\Catalog.js":"3","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\ProductDetails\\ProductDetails.js":"4","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\Header\\Header.js":"5","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\config.js":"6","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\CardList\\CardList.js":"7","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\helpers\\functions.js":"8","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\HelperComponents\\Filters\\Filters.js":"9","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\HelperComponents\\LineChart\\LineChart.js":"10","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\HelperComponents\\Card\\Card.js":"11","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\HelperComponents\\LoaderCard\\LoaderCard.jsx":"12"},{"size":232,"mtime":1611421922321,"results":"13","hashOfConfig":"14"},{"size":842,"mtime":1611421922287,"results":"15","hashOfConfig":"14"},{"size":2659,"mtime":1611507974844,"results":"16","hashOfConfig":"14"},{"size":2597,"mtime":1611499994554,"results":"17","hashOfConfig":"14"},{"size":506,"mtime":1611421922298,"results":"18","hashOfConfig":"14"},{"size":161,"mtime":1611446042062,"results":"19","hashOfConfig":"14"},{"size":2446,"mtime":1611505401798,"results":"20","hashOfConfig":"14"},{"size":131,"mtime":1611421922319,"results":"21","hashOfConfig":"14"},{"size":4252,"mtime":1611499994549,"results":"22","hashOfConfig":"14"},{"size":4568,"mtime":1611499994552,"results":"23","hashOfConfig":"14"},{"size":2196,"mtime":1611499994546,"results":"24","hashOfConfig":"14"},{"size":1198,"mtime":1611507093192,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1y1s88w",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\index.js",[],["54","55"],"C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\App\\App.js",[],"C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\Catalog\\Catalog.js",["56"],"C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\ProductDetails\\ProductDetails.js",["57"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { STATS_API_ENDPOINT } from \"../../config\";\r\nimport { sendRequest } from \"./../../helpers/functions\";\r\nimport LineChart from \"./../HelperComponents/LineChart/LineChart\";\r\nimport \"./ProductDetails.scss\";\r\n\r\nconst ProductDetails = () => {\r\n    const { slug } = useParams();\r\n    const [data, setData] = useState([]);\r\n    let actualData = data[data.length - 1];\r\n    // const {\r\n    //     link,\r\n    //     image,\r\n    //     price,\r\n    //     price_for_kilo,\r\n    //     shop,\r\n    //     title,\r\n    //     weight,\r\n    // } = actualData;\r\n    useEffect(() => {\r\n        sendRequest(\r\n            `${STATS_API_ENDPOINT}/price-history/${slug}`,\r\n            \"GET\"\r\n        ).then((res) => setData(res));\r\n    }, []);\r\n    return (\r\n        <div className=\"details\">\r\n            <div className=\"details-chart\">\r\n                <LineChart data={data} />\r\n            </div>\r\n            <div className=\"details-content\">\r\n                <div className=\"details-content-img\">\r\n                    <div className=\"details-title\">\r\n                        {actualData && actualData.title}\r\n                    </div>\r\n                    <img src={actualData && actualData.image} alt=\"product\" />\r\n                </div>\r\n                <div>\r\n                    <div className=\"details-data\">\r\n                        <div className=\"details-price\">\r\n                            {actualData && actualData.price.toFixed(2)} грн\r\n                        </div>\r\n                        <div className=\"details-weight\">\r\n                            <div className=\"details-weight-kg\">\r\n                                Вага: {actualData && actualData.weight}\r\n                            </div>\r\n                        </div>\r\n                        {/* <div>{actualData && actualData.shop}</div> */}\r\n                    </div>\r\n                    <a\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        className=\"btn\"\r\n                        href={`${actualData && actualData.link}`}\r\n                    >\r\n                        Перейти до товару\r\n                    </a>\r\n                    <div className=\"details-weight-price\">\r\n                        Ціна за 1 кг:{\" \"}\r\n                        {actualData && actualData.price_for_kilo.toFixed(2)} грн\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetails;\r\n","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\Header\\Header.js",[],"C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\config.js",[],"C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\CardList\\CardList.js",[],"C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\helpers\\functions.js",[],"C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\HelperComponents\\Filters\\Filters.js",["58","59","60","61","62","63","64","65","66"],"import React, { useCallback, useState } from \"react\";\r\nimport \"./Filters.scss\";\r\nimport { Checkbox } from \"@atlaskit/checkbox\";\r\nimport metro from \"../../../assets/images/metro-filter.PNG\";\r\nimport atb from \"../../../assets/images/atb-filter.jpg\";\r\nimport novus from \"../../../assets/images/novus-filter.PNG\";\r\nimport Select from \"react-select\";\r\nimport silpo from \"../../../assets/images/silpo.svg\";\r\n\r\nconst Filters = ({\r\n    atbFilter,\r\n    novusFilter,\r\n    metroFilter,\r\n    setAtbFilter,\r\n    setNovusFilter,\r\n    setMetroFilter,\r\n    sortSelected,\r\n    setSortSelected,\r\n    setSilpoFilter,\r\n    silpoFilter,\r\n}) => {\r\n    const handleChange = (selectedOption) => {\r\n        setSortSelected(selectedOption);\r\n    };\r\n    const onChangeMetro = useCallback((event) => {\r\n        setMetroFilter((metroFilter) => !metroFilter);\r\n    }, []);\r\n    const onChangeAtb = useCallback((event) => {\r\n        setAtbFilter((atbFilter) => !atbFilter);\r\n    }, []);\r\n    const onChangeNovus = useCallback((event) => {\r\n        setNovusFilter((novusFilter) => !novusFilter);\r\n    }, []);\r\n    const onChangeSilpo = useCallback((event) => {\r\n        setSilpoFilter((silpoFilter) => !silpoFilter);\r\n    }, []);\r\n\r\n    const options = [\r\n        { value: \"price-up\", label: \"За ціною ▲\" },\r\n        { value: \"price-down\", label: \"За ціною ▼\" },\r\n        {\r\n            value: \"kg-up\",\r\n            label: \"За ціною за кг ▲\",\r\n        },\r\n        {\r\n            value: \"kg-down\",\r\n            label: \"За ціною за кг ▼\",\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"filters-wrap\">\r\n            <div className=\"filters\">\r\n                <div>\r\n                    <p>Фільтри</p>\r\n                    <div>\r\n                        <Checkbox\r\n                            isChecked={metroFilter}\r\n                            onChange={onChangeMetro}\r\n                            value=\"Controlled Checkbox\"\r\n                            name=\"controlled-checkbox\"\r\n                            id=\"metro\"\r\n                        />\r\n                        <label htmlFor=\"metro\">\r\n                            <img src={metro} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <Checkbox\r\n                            isChecked={atbFilter}\r\n                            onChange={onChangeAtb}\r\n                            value=\"Controlled Checkbox\"\r\n                            name=\"controlled-checkbox\"\r\n                            id=\"atb\"\r\n                        />\r\n                        <label htmlFor=\"atb\">\r\n                            <img src={atb} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <Checkbox\r\n                            isChecked={novusFilter}\r\n                            onChange={onChangeNovus}\r\n                            value=\"Controlled Checkbox\"\r\n                            name=\"controlled-checkbox\"\r\n                            id=\"novus\"\r\n                        />\r\n                        <label htmlFor=\"novus\">\r\n                            <img src={novus} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <Checkbox\r\n                            isChecked={silpoFilter}\r\n                            onChange={onChangeSilpo}\r\n                            value=\"Controlled Checkbox\"\r\n                            name=\"controlled-checkbox\"\r\n                            id=\"silpo\"\r\n                        />\r\n                        <label htmlFor=\"silpo\">\r\n                            <img src={silpo} />\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <p>Сортування</p>\r\n                    <Select\r\n                        options={options}\r\n                        className=\"select_component\"\r\n                        classNamePrefix=\"select\"\r\n                        value={sortSelected}\r\n                        onChange={handleChange}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filters;\r\n","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\HelperComponents\\LineChart\\LineChart.js",["67","68"],"import React, { Component } from \"react\";\r\nimport Chart from \"highcharts-react-official\";\r\nimport moment from \"moment\";\r\nimport * as Highcharts from \"highcharts/highstock\";\r\nimport \"./LineChart.scss\";\r\nimport 'moment/locale/ru';\r\n\r\nclass LineChart extends Component {\r\n    render() {\r\n        const { data } = this.props;\r\n        const options = {\r\n            title: {\r\n                text: null,\r\n            },\r\n            credits: {\r\n                enabled: false,\r\n            },\r\n            chart: {\r\n                marginTop: 30,\r\n                height: 600,\r\n                // width: \"100%\"\r\n            },\r\n\r\n            xAxis: {\r\n                categories:\r\n                    data &&\r\n                    data.map((el) =>\r\n                        moment(el.date_created)\r\n                            .locale(\"ua\")\r\n                            .format(\"HH:mm, DD/MM/YYYY\")\r\n                    ),\r\n                labels: {\r\n                    style: {\r\n                        fontFamily: \"RobotoRegular\",\r\n                        fontSize: \"14px\",\r\n                        color: \"#3796F6\",\r\n                        opacity: \".5\",\r\n                        color: \"#204569\",\r\n                    },\r\n                },\r\n                crosshair: true,\r\n                gridLineWidth: 1,\r\n                min: 0,\r\n                max: 12,\r\n                scrollbar: {\r\n                    enabled: true,\r\n                    barBackgroundColor: \"#89C4C2\",\r\n                    barBorderRadius: 4,\r\n                    trackBackgroundColor: \"#EDF5FE\",\r\n                    trackBorderRadius: 4,\r\n                    height: 6 / 1,\r\n                    rifleColor: \"#EDF5FE\",\r\n                    margin: 30,\r\n                },\r\n                lineWidth: 1,\r\n                lineColor: \"#8FA2B4\",\r\n            },\r\n            legend: {\r\n                enabled: false,\r\n            },\r\n            yAxis: {\r\n                min: 0,\r\n                gridLineWidth: 1,\r\n                labels: {\r\n                    style: {\r\n                        fontFamily: \"RobotoRegular\",\r\n                        fontSize: \"14px\",\r\n                        color: \"#3796F6\",\r\n                        opacity: \".5\",\r\n                        color: \"#204569\",\r\n                    },\r\n                    format: \"{value} грн\",\r\n                },\r\n                title: {\r\n                    align: \"high\",\r\n                    rotation: 0,\r\n                    y: -15,\r\n                    offset: -25,\r\n                    text: \"Ціна, ₴\",\r\n                    style: {\r\n                        fontFamily: \"RobotoRegular\",\r\n                        color: \"#204569\",\r\n                        opacity: \".5\",\r\n                        fontSize: \"14px\",\r\n                    },\r\n                },\r\n                lineWidth: 1,\r\n                lineColor: \"#8FA2B4\",\r\n                minorGridLineWidth: 0,\r\n                minorTickInterval: \"auto\",\r\n                minorTickWidth: 1,\r\n                minorTickLength: 5,\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                style: {\r\n                    fontFamily: \"RobotoMedium\",\r\n                    fontSize: \"14px\",\r\n                    color: \"#204569\",\r\n                },\r\n                formatter: function () {\r\n                    return \"Ціна: \" + this.y.toFixed(2) + \" грн\";\r\n                },\r\n            },\r\n            series: [\r\n                {\r\n                    marker: {\r\n                        enabled: true,\r\n                    },\r\n                    name: \"Ціна\",\r\n                    data: data && data.map((el) => el.price),\r\n                    color: \"#DFBC9A\",\r\n                    borderRadius: 2,\r\n                    pointWidth: 24,\r\n                    dataLabels: {\r\n                        enabled: false,\r\n                        format: \"{point.format}\",\r\n                        style: {\r\n                            fontFamily: \"RobotoMedium\",\r\n                            fontSize: \"14px\",\r\n                            color: \"#204569\",\r\n                        },\r\n                        inside: false,\r\n                        align: \"right\",\r\n                    },\r\n                    shadow: {\r\n                        color: \"#FFF7F1\",\r\n                        width: 10,\r\n                        opacity: 1,\r\n                    },\r\n                },\r\n            ],\r\n        };\r\n        return <Chart highcharts={Highcharts} options={options} />;\r\n    }\r\n}\r\n\r\nexport default LineChart;\r\n","C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\HelperComponents\\Card\\Card.js",[],"C:\\Users\\ddk20\\source\\repos\\gre4ka_frontend\\src\\components\\HelperComponents\\LoaderCard\\LoaderCard.jsx",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":36,"column":13,"nodeType":"75","endLine":43,"endColumn":4},{"ruleId":"73","severity":1,"message":"76","line":26,"column":8,"nodeType":"77","endLine":26,"endColumn":10,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":30,"nodeType":"81","messageId":"82","endLine":1,"endColumn":38},{"ruleId":"73","severity":1,"message":"83","line":27,"column":8,"nodeType":"77","endLine":27,"endColumn":10,"suggestions":"84"},{"ruleId":"73","severity":1,"message":"85","line":30,"column":8,"nodeType":"77","endLine":30,"endColumn":10,"suggestions":"86"},{"ruleId":"73","severity":1,"message":"87","line":33,"column":8,"nodeType":"77","endLine":33,"endColumn":10,"suggestions":"88"},{"ruleId":"73","severity":1,"message":"89","line":36,"column":8,"nodeType":"77","endLine":36,"endColumn":10,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":65,"column":29,"nodeType":"93","endLine":65,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":77,"column":29,"nodeType":"93","endLine":77,"endColumn":46},{"ruleId":"91","severity":1,"message":"92","line":89,"column":29,"nodeType":"93","endLine":89,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":101,"column":29,"nodeType":"93","endLine":101,"endColumn":48},{"ruleId":"94","severity":1,"message":"95","line":38,"column":25,"nodeType":"96","messageId":"97","endLine":38,"endColumn":30},{"ruleId":"94","severity":1,"message":"95","line":70,"column":25,"nodeType":"96","messageId":"97","endLine":70,"endColumn":30},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'slug'. Either include it or remove the dependency array.","ArrayExpression",["100"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useCallback has a missing dependency: 'setMetroFilter'. Either include it or remove the dependency array. If 'setMetroFilter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["101"],"React Hook useCallback has a missing dependency: 'setAtbFilter'. Either include it or remove the dependency array. If 'setAtbFilter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["102"],"React Hook useCallback has a missing dependency: 'setNovusFilter'. Either include it or remove the dependency array. If 'setNovusFilter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["103"],"React Hook useCallback has a missing dependency: 'setSilpoFilter'. Either include it or remove the dependency array. If 'setSilpoFilter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["104"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [slug]",{"range":"115","text":"116"},"Update the dependencies array to be: [setMetroFilter]",{"range":"117","text":"118"},"Update the dependencies array to be: [setAtbFilter]",{"range":"119","text":"120"},"Update the dependencies array to be: [setNovusFilter]",{"range":"121","text":"122"},"Update the dependencies array to be: [setSilpoFilter]",{"range":"123","text":"124"},[820,822],"[slug]",[839,841],"[setMetroFilter]",[952,954],"[setAtbFilter]",[1073,1075],"[setNovusFilter]",[1194,1196],"[setSilpoFilter]"]